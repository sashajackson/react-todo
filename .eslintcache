[{"/Users/drejackson/Desktop/react-todo/src/index.js":"1","/Users/drejackson/Desktop/react-todo/src/App.js":"2","/Users/drejackson/Desktop/react-todo/src/reportWebVitals.js":"3","/Users/drejackson/Desktop/react-todo/src/components/Todos.js":"4","/Users/drejackson/Desktop/react-todo/src/components/TodoItem.js":"5","/Users/drejackson/Desktop/react-todo/src/components/layout/header.js":"6","/Users/drejackson/Desktop/react-todo/src/components/layout/addTodo.js":"7","/Users/drejackson/Desktop/react-todo/src/components/layout/input.js":"8","/Users/drejackson/Desktop/react-todo/src/components/layout/time.js":"9","/Users/drejackson/Desktop/react-todo/src/components/layout/alert.js":"10","/Users/drejackson/Desktop/react-todo/src/components/layout/signIn.js":"11","/Users/drejackson/Desktop/react-todo/src/routes/index.js":"12","/Users/drejackson/Desktop/react-todo/src/services/history.js":"13","/Users/drejackson/Desktop/react-todo/src/components/layout/dashboard.js":"14","/Users/drejackson/Desktop/react-todo/src/components/layout/signup.js":"15","/Users/drejackson/Desktop/react-todo/src/components/layout/signinmaster.js":"16","/Users/drejackson/Desktop/react-todo/src/components/layout/createGroup.js":"17","/Users/drejackson/Desktop/react-todo/src/components/layout/groupPage.js":"18","/Users/drejackson/Desktop/react-todo/src/components/layout/protectedNav.js":"19"},{"size":478,"mtime":1610764516000,"results":"20","hashOfConfig":"21"},{"size":8257,"mtime":1612235006000,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1610763564000,"results":"23","hashOfConfig":"21"},{"size":762,"mtime":1611741877000,"results":"24","hashOfConfig":"21"},{"size":1639,"mtime":1612278259000,"results":"25","hashOfConfig":"21"},{"size":2720,"mtime":1612232346000,"results":"26","hashOfConfig":"21"},{"size":1096,"mtime":1611677459000,"results":"27","hashOfConfig":"21"},{"size":245,"mtime":1611503611000,"results":"28","hashOfConfig":"21"},{"size":1363,"mtime":1611707138000,"results":"29","hashOfConfig":"21"},{"size":560,"mtime":1611876156000,"results":"30","hashOfConfig":"21"},{"size":1528,"mtime":1612131144000,"results":"31","hashOfConfig":"21"},{"size":309,"mtime":1611726127000,"results":"32","hashOfConfig":"21"},{"size":110,"mtime":1611723305000,"results":"33","hashOfConfig":"21"},{"size":12239,"mtime":1612448967000,"results":"34","hashOfConfig":"21"},{"size":1591,"mtime":1612232412000,"results":"35","hashOfConfig":"21"},{"size":236,"mtime":1611787039000,"results":"36","hashOfConfig":"21"},{"size":6275,"mtime":1612232202000,"results":"37","hashOfConfig":"21"},{"size":14655,"mtime":1612445495000,"results":"38","hashOfConfig":"21"},{"size":3687,"mtime":1612232377000,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"l1lvwa",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"42"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"68"},"/Users/drejackson/Desktop/react-todo/src/index.js",[],["87","88"],"/Users/drejackson/Desktop/react-todo/src/App.js",[],"/Users/drejackson/Desktop/react-todo/src/reportWebVitals.js",[],"/Users/drejackson/Desktop/react-todo/src/components/Todos.js",[],"/Users/drejackson/Desktop/react-todo/src/components/TodoItem.js",[],"/Users/drejackson/Desktop/react-todo/src/components/layout/header.js",["89","90"],"import React, {Component} from 'react' \nimport {createBrowserHistory } from 'history'\nimport './header.css'\n\nclass Header extends Component {\n  _history = createBrowserHistory({forceRefresh: true});\n  display = 'Login';\n  isAuth = () => {\n      if(localStorage.getItem('isAuth')){\n        console.log('page should be changed now');\n          this._history.push('/dashboard');\n          this.display = 'Dashboard';\n      } else {\n        this._history.push('/signIn');\n        this.display = 'Sign In'\n      }\n  }\n  \n\n\n    render(){\n\n      return (\n        <nav className=\"navbar\" style={headerStyle}>\n        <div style={containerStyle} className=\"container-fluid\">\n          <a style={brandStyle} className=\"navbar-brand\" href=\"/\">GroupList</a>\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"><i className=\"fas fa-bars\" style={menuIcon}></i></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n            <ul style={ulStyle} className=\"navbar-nav\">\n              <li className=\"nav-item\">\n                <a style={aStyle} className=\"nav-link active\" href=\"/\" aria-current=\"page\"><span style={ulIcon}><i className=\"fad fa-home-lg-alt\"></i></span> Home </a>\n              </li>\n              <li className=\"nav-item\">\n                <a style={aStyle} className=\"nav-link\" onClick={this.isAuth}><span style={ulIcon}><i className=\"fad fa-sign-in-alt\"></i></span> {this.display} </a>\n              </li>\n              <li className=\"nav-item\">\n                <a style={aStyle} className=\"nav-link\" href=\"/\"><span style={ulIcon}><i className=\"fad fa-users\"></i></span> Groups</a>\n              </li>\n            </ul>\n          </div>\n      \n        </div>\n      </nav>\n      )\n    }\n}\n\nconst containerStyle = {\n  paddingLeft: '0'\n}\n\nconst headerStyle =  {\n    color: 'ghostwhite',\n    padding: '10px',\n    textAlign: 'center',\n    background: 'linear-gradient(45deg, #7f5fff, #7f5fff, #5f8fff, #5f8fff)',\n    boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px',\n};\n\nconst ulStyle = {\n    float: 'left',\n    color: 'ghostwhite !important'\n}\n\nconst menuIcon = {\n    fontSize: '30px',\n    color: 'ghostwhite',\n}\n\nconst brandStyle = {\n    color: 'ghostwhite',\n    background: '#4c4c4c',\n    background: 'transparent',\n    borderRadius: '20em',\n    padding: '10px',\n    fontFamily: 'Trispace',\n    boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px',\n}\n\nconst aStyle = {\n  textAlign: \"left\",\n  color: 'black',\n  fontFamily: 'Trispace',\n}\n\nconst ulIcon = {\n  color: 'black',\n}\n\nexport default Header;","/Users/drejackson/Desktop/react-todo/src/components/layout/addTodo.js",[],"/Users/drejackson/Desktop/react-todo/src/components/layout/input.js",[],"/Users/drejackson/Desktop/react-todo/src/components/layout/time.js",[],"/Users/drejackson/Desktop/react-todo/src/components/layout/alert.js",[],"/Users/drejackson/Desktop/react-todo/src/components/layout/signIn.js",["91"],"import React, {Component} from 'react'\nimport {createBrowserHistory } from 'history'\n\nclass SignIn extends Component {\n    _history = createBrowserHistory({forceRefresh: true});\n\n    redirect = () => {\n        this._history.push('/signup');\n    }\n\n    render(){\n        return (\n            <div style={rowStyle} className=\"row\">\n                <div className=\"col-2\"></div>\n                <div className=\"col-8\">\n                    <div style={cardStyle} className=\"card\">\n                        <h5 style={{textAlign: \"center\"}} className=\"card-title\">Sign In Console</h5>\n                        <input style={inputStyle} type=\"text\" id=\"email\" name=\"email\" placeholder=\"enter email\"></input>\n                        <input style={inputStyle} type=\"password\" id=\"password\" name=\"password\" placeholder=\"enter password\"></input>\n                        <button style={btnStyle} className=\"btn\" onClick={this.props.submitSignIn}>Submit</button>\n                        <p>or <a onClick={this.redirect}>Sign Up</a></p>\n\n                    </div>\n                </div>\n                <div className=\"col-2\"></div>\n            </div>\n        )\n    }\n}\n\nconst inputStyle = {\n    margin: \"20px 0\",\n    borderRadius: \"30px\",\n    height: \"50px\",\n    border: \"none\",\n    background: \"#f4f4f4\",\n    paddingLeft: \"20px\"\n}\n\nconst cardStyle = {\n    padding: \"20px\",\n    background: \"f4f4f4\",\n}\n\nconst btnStyle = {\n    background: \"black\",\n    color: \"ghostwhite\"\n}\n\nconst rowStyle = {\n    paddingTop: \"2em\",\n}\n\nexport default SignIn\n","/Users/drejackson/Desktop/react-todo/src/routes/index.js",["92"],"import React from 'react'\nimport {Switch, Route} from 'react-router-dom'\nimport SignIn from '../components/layout/signIn'\nimport Todo from '../components/Todos'\n\nexport default function Routes() {\n    return (\n        <Switch>\n            <Route path=\"/signIn\" component={SignIn} />\n        </Switch>\n    )\n}\n",["93","94"],"/Users/drejackson/Desktop/react-todo/src/services/history.js",[],"/Users/drejackson/Desktop/react-todo/src/components/layout/dashboard.js",["95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110"],"/Users/drejackson/Desktop/react-todo/src/components/layout/signup.js",["111"],"import React, {Component} from 'react'\nimport {createBrowserHistory } from 'history'\n\n\nclass SignUp extends Component {\n    _history = createBrowserHistory({forceRefresh: true});\n\n\n    render(){\n        return (\n            <div style={rowStyle} className=\"row\">\n            <div className=\"col-2\"></div>\n            <div className=\"col-8\">\n                <div style={cardStyle} className=\"card\">\n                    <h5 style={{textAlign: \"center\"}}className=\"card-title\">Sign Up</h5>\n                    <input style={inputStyle} type=\"text\" id=\"saveUsername\" name=\"username\" placeholder=\"enter username\"></input>\n                    <input style={inputStyle} type=\"text\" id=\"saveEmail\" name=\"email\" placeholder=\"enter email\"></input>\n                    <input style={inputStyle} type=\"password\" id=\"savePassword\" name=\"password\" placeholder=\"create password\"></input>\n                    <button style={btnStyle} className=\"btn\" onClick={this.props.addUser}>Submit</button>\n                    <p style={pStyle}>or <a>Login</a></p>\n\n                </div>\n            </div>\n            <div className=\"col-2\"></div>\n        </div>\n        )\n    }\n}\nconst inputStyle = {\n    margin: \"20px 0\",\n    borderRadius: \"30px\",\n    height: \"50px\",\n    border: \"none\",\n    background: \"#f4f4f4\",\n    paddingLeft: \"20px\"\n}\n\nconst cardStyle = {\n    padding: \"20px\",\n    background: \"f4f4f4\",\n}\n\nconst btnStyle = {\n    background: \"black\",\n    color: \"ghostwhite\"\n}\n\nconst rowStyle = {\n    paddingTop: \"2em\",\n}\n\nconst pStyle = {\n    textAlign: \"center\",\n    marginTop: \"1em\"\n}\n\nexport default SignUp","/Users/drejackson/Desktop/react-todo/src/components/layout/signinmaster.js",[],"/Users/drejackson/Desktop/react-todo/src/components/layout/createGroup.js",["112"],"import React, { Component } from 'react'\n\nclass CreateGroup extends Component {\n\n\n\n\n    render(){\n        return (\n            <div>\n\n<div className=\"row\">\n                <div className=\"col-12\">\n                    <nav className=\"navbar\" style={headerStyle}>\n                        <div style={containerStyle} className=\"container-fluid\">\n                            <a style={brandStyle} className=\"navbar-brand\" href=\"/\">GroupList</a>\n                            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                                <span className=\"navbar-toggler-icon\"><i className=\"fas fa-bars\" style={menuIcon}></i></span>\n                            </button>\n                            <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                                <ul style={ulStyle} className=\"navbar-nav\">\n                                    <li className=\"nav-item\">\n                                        <a style={aStyle} className=\"nav-link active\" href=\"/\" aria-current=\"page\"><span style={ulIcon}><i className=\"fad fa-home-lg-alt\"></i></span> Home </a>\n                                    </li>\n                                    <li className=\"nav-item\">\n                                        <a style={aStyle} className=\"nav-link\" onClick={this.isAuth}><span style={ulIcon}><i className=\"fad fa-sign-in-alt\"></i></span> {this.display} </a>\n                                    </li>\n                                    <li className=\"nav-item\">\n                                        <a style={aStyle} className=\"nav-link\" href=\"/\"><span style={ulIcon}><i className=\"fad fa-users\"></i></span> Groups</a>\n                                    </li>\n                                </ul>\n                            </div>\n      \n                        </div>\n                    </nav>\n                </div>\n            </div>\n\n            <div style={headerRow} className=\"row\">\n                <div className=\"col-6 d-flex justify-content-center align-items-center\">\n                    <i style={iStyle} className=\"fab fa-twitter\"></i> \n                    <i style={iStyle1} className=\"fab fa-facebook\"></i> \n                    <i style={iStyle1} className=\"fas fa-envelope\"></i>\n                </div>\n                <div style={liFloatRight} className=\"col-6\">\n                    8:34 PM\n                </div>\n            </div>\n\n\n\n            <div style={{padding: \"20px\"}} className=\"row\">\n\n                <div style={{paddingTop: \"30px\"}} className=\"col-12\">\n                <div style={{padding: \"20px\"}} className=\"card\">\n                    <h5 style={{padding: \"20px\", textAlign: \"center\", fontFamily: 'Trispace',}} className=\"card-title\">Don't forget to invite your friends!</h5>\n                <div className=\"input-group\">\n                    <span className=\"input-group-text\">Group Name</span>\n                    <input id=\"groupTitle\" type=\"text\" aria-label=\"First name\" className=\"form-control\"/>\n                </div>\n                {/* <div style={{marginTop: \"1em\"}} className=\"input-group mb-3\">\n                    <label className=\"input-group-text\" htmlFor=\"inputGroupSelect01\">Add Member</label>\n                    <select defaultValue=\"1\" className=\"form-select\" id=\"inputGroupSelect01\">\n                        <option value=\"1\">Choose..</option>\n                        <option value=\"2\">John</option>\n                        <option value=\"3\">Lisa</option>\n                        <option value=\"4\">Debrah</option>\n                    </select>\n                </div> */}\n\n                <h5 style={{padding: \"20px\", textAlign: \"center\", fontFamily: 'Trispace',}} className=\"card-title\">Add Task</h5>\n                <div className=\"input-group mb-3\">\n                    {/* <span className=\"input-group-text\" id=\"basic-addon1\">Task 1</span> */}\n                    <input type=\"text\" id=\"task1\" className=\"form-control\" placeholder=\"Enter task..\" aria-label=\"Username\" aria-describedby=\"basic-addon1\"/>               \n                </div>\n                <div className=\"input-group mb-3\">\n                    {/* <span class=\"input-group-text\" id=\"basic-addon1\">Task 1</span> */}\n                    <input type=\"text\" id=\"task2\" className=\"form-control\" placeholder=\"Enter task..\" aria-label=\"Username\" aria-describedby=\"basic-addon1\"/>              \n                </div>\n                <div className=\"input-group mb-3\">\n                    {/* <span class=\"input-group-text\" id=\"basic-addon1\">Task 1</span> */}\n                    <input type=\"text\" id=\"task3\" className=\"form-control\" placeholder=\"Enter task..\" aria-label=\"Username\" aria-describedby=\"basic-addon1\"/>               \n                </div>\n                <button style={submitStyle} type=\"button\" className=\"btn btn-primary\" onClick={this.props.createGroup} >Create Group</button>\n        </div>\n    </div>\n     \n</div>\n</div>\n        )\n    }\n}\n\n//form style\nconst submitStyle = {\n    background: \"#7f5fff\",\n    border: \"none\",\n}\n\n//navbar style\nconst containerStyle = {\n    paddingLeft: '0'\n  }\n  \nconst headerStyle =  {\n      color: 'ghostwhite',\n      padding: '1em 10px 1em 10px',\n      textAlign: 'center',\n      background: '#7f5fff',\n      boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px',\n  };\n  \nconst ulStyle = {\n      float: 'left',\n      color: 'ghostwhite !important'\n  }\n  \nconst menuIcon = {\n      fontSize: '30px',\n      color: 'ghostwhite',\n  }\n  \nconst brandStyle = {\n      color: 'ghostwhite',\n      background: 'transparent',\n      borderRadius: '20em',\n      padding: '10px',\n      fontFamily: 'Trispace',\n      boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px',\n  }\n  \nconst aStyle = {\n    textAlign: \"left\",\n    color: 'black',\n    fontFamily: 'Trispace',\n  }\n  \nconst ulIcon = {\n    color: 'black',\n  }\nconst iStyle = {\n    fontSize: \"20px\"\n}\nconst iStyle1 = {\n    fontSize: \"20px\",\n    marginLeft: \"30px\"\n}\nconst liFloatRight = {\n    textAlign: \"right\",\n    fontFamily: 'Trispace',\n    fontSize: '20px',\n}\nconst headerRow = {\n    padding: \"20px\",\n    background: \"white\",\n    boxShadow: \"rgba(0, 0, 0, 0.04) 0px 3px 5px\",\n} \n\nexport default CreateGroup","/Users/drejackson/Desktop/react-todo/src/components/layout/groupPage.js",["113","114","115","116","117"],"import React , { Component } from 'react'\nimport axios from 'axios'\n\nclass GroupPage extends Component {\n    _isMounted = false;\n    count = 0;\n\n\n    constructor(props){\n        super(props);\n        this.state = {\n            groups: [],\n            userInfo: [],\n            users: [],\n            requestComplete: false,\n        }\n    }\n\n    undoneStyle = () => {\n        return {\n            background: 'white',\n            padding: '10px',\n            borderBottom: '1px #ccc dotted',\n            fontSize: '20px',\n            margin: \"0 20px 20px 20px\",\n            borderRadius: \"30px\"\n        }\n      }\n    doneStyle = () => {\n        return {\n            background: 'white',\n            padding: '10px',\n            borderBottom: '1px #ccc dotted',\n            fontSize: '20px',\n            margin: \"0 20px 20px 20px\",\n            borderRadius: \"30px\"\n        }\n      }\n\n\n    componentDidMount = async () => {\n        this._isMounted = true;\n        // console.log('entered component did mount');\n\n            let obj = {\n                id: localStorage.getItem('fx')\n            }\n\n            await axios\n                .post('/mygroups', obj)\n                    .then(res => {\n                        if(this._isMounted){\n                            this.setState({\n                                groups: res.data,\n                                requestComplete: true,\n                            })\n                            // console.log('state', this.state)\n                            // console.log(this.state.groups[0])\n                        }\n                    })\n            let obj1 = {\n                id: localStorage.getItem('fx')\n            }\n            await axios\n                    .post('/getUserData', obj1)\n                        .then(result => {\n                            this.setState({\n                                groups: this.state.groups,\n                                userInfo: result.data,\n                                requestComplete: true,\n                            })\n                            console.log(this.state)\n                        })\n            await axios \n                        .get('/getUsers')\n                            .then(result => {\n                                let newArray = [];\n                                result.data.forEach(obj => {\n                                    let newObj = {};\n                                    newObj.username = obj.username;\n                                    newObj.id = obj._id\n                                    newArray.push(newObj);\n                                })\n                                this.setState({\n                                    groups: this.state.groups,\n                                    userInfo: this.state.userInfo,\n                                    users: newArray,\n                                    requestComplete: true,\n                                })\n                                // console.log(result.data);\n                            }).catch(err => console.log(err))\n\n                    // console.log('this is componentdidmount')\n    }\n\n    componentDidUpdate(prevProps) {\n        // console.log(this.state)\n        // Typical usage (don't forget to compare props):\n        if(this.state.groups.length !== 0){\n            // console.log('time to change page contents');\n        }\n      }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n      }\n\n    addCount = () => {\n        this.count = this.count++;\n        return this.count;\n    }\n\n\n    myGroupsCall = () => {\n\n            let obj = {\n                id: localStorage.getItem('fx')\n            }\n\n            axios\n                .post('/mygroups', obj)\n                    .then(res => {\n                        if(this._isMounted){\n                            this.setState({\n                                groups: [res.data],\n                                requestComplete: true,\n                            })\n                            console.log('res ', res)\n                        }\n\n                        // console.log('this is state in group ', this.state)\n                    })\n            // console.log('should console after update');\n    }\n\n    complete = (id, task, groupId, index, groupIndex) => {\n\n        let complete = this.state.groups[groupIndex].groupTask.filter(v => v.task === task)\n        complete.completed = true;\n        let elem = document.getElementById(id);\n        let icon = document.getElementById(`icon_` + id)\n        elem.style.textDecoration = 'line-through';\n        elem.style.color = '#f4f4f4';\n        console.log(groupIndex);\n        this.updateRecord(groupId, task, index);\n       \n    }\n\n\n    updateRecord = (_id, _task, _index) => {\n        let obj = {\n            id: _id,\n            task: _task,\n            index: _index,\n            completedBy: localStorage.getItem('fx')\n        }\n\n        axios\n            .put('/updateTask', obj)\n                .then(result => {\n                    console.log('updateTask result data ', result.data)\n                }).catch(err => console.log(err));\n    }\n\n    getUser = async () => {\n        let ls = localStorage.getItem('fx');\n        let obj = {\n            id: ls,\n        }\n        let hi = 'hi';\n        // await axios\n        //     .post('/getCompletedBy', obj)\n        //         .then(result => {\n        //             hi = result.data.username\n        //         })\n        return hi;\n    }\n\n    showSearch = (username) => {\n        let flag = false;\n        let usr;\n        let uId;\n        console.log('incoming username ', username);\n        if(this.state.users.length > 0){\n            this.state.users.forEach(val => {\n                if(val.username === username){\n                    console.log('found a match')\n                    flag = true;\n                    usr = val.username;\n                    uId = val.id;\n                }\n            })\n        }\n\n        if(flag){\n            console.log('this is usr ', usr);\n            let div = document.createElement('div');\n            div.className = 'userSearch';\n            div.innerHTML = usr;\n            let modalBody = document.getElementById('modal-body');\n            div.addEventListener('click', (e) => {\n                console.log(this.state.clickedCard)\n                let obj = {\n                    id: this.state.clickedCard,\n                    user: usr,\n                    userId: uId\n                }\n                axios\n                    .post('/updateMembers', obj)\n                        .then(result => {\n                            console.log(result.data)\n                        })\n            })\n            modalBody.appendChild(div);\n            return usr;\n        }\n        console.log('users is empty');\n        return 'user does not exist'\n    }\n\n\n\n    render(){\n\n        if(this.state.groups.length !== 0){\n\n            return(\n                <div className=\"\">\n    \n                    \n                    \n                    <div className=\"row\">\n                    <div className=\"col-12\">\n                    <div className=\"card-group\">\n                    {this.state.groups.map((group, i) => \n                        <div key={i} className=\"card text-dark bg-light m-3\" style={{}}>\n                            <div style={cardHeader} className=\"card-header\">{group.title}<i onClick={() => {\n                                this.setState({\n                                    groups: this.state.groups,\n                                    userInfo: this.state.userInfo,\n                                    users: this.state.users,\n                                    requestComplete: this.state.requestComplete,\n                                    clickedCard: group._id,\n                                })\n                            }} data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\" style={{color:\"white\", float:\"right\"}} class=\"fal fa-user-plus\"></i></div>\n                                <div className=\"card-body\">\n                                    {group.groupTask.map((val, index) => {\n\n                                        if(this.state.groups[i].groupTask[index].completed && this.state.groups[i].groupTask[index].completedBy === []){\n                                            \n                                            return (\n                                                <div key={index} className=\"row\" style={this.doneStyle()}>\n                                                    <div className=\"col-12\">\n                                                        <h5 id={`${index}`} onClick={ () => {this.complete(`${index}`, val.task, group._id, index)} } style={displayBlock}>{val.task}</h5>\n                                                        <span style={doneBlock}><i id={`icon_${index}`} style={circle} className=\"fas fa-circle\"></i></span>\n                                                    </div>\n                                                </div>\n                                            )\n                                        } else if(this.state.groups[i].groupTask[index].completed && this.state.groups[i].groupTask[index].completedBy !== []){\n                                            return (\n                                                <div key={index} className=\"row\" style={this.doneStyle()}>\n                                                    <div className=\"col-12\">\n                                                        <h5 id={`${index}`} onClick={ () => {this.complete(`${index}`, val.task, group._id, i)} } style={displayBlock}>{val.task}</h5>\n                                                        {/* <span style={doneBlock}><i id={`icon_${index}`} style={circle} className=\"fas fa-circle\"></i></span> */}\n                                                        <h5 style={doneBlock} className=\"mb-0\">\n\n                                                        <span style={{fontFamily:\"Trispace\", fontSize:\"13px\"}}> <i style={{color:\"green\"}} class=\"fal fa-check\"></i> @{val.completedBy}</span>\n                                                        </h5>\n                                                    </div>\n                                                </div>\n                                            )\n                                        } else {\n                                            return (\n                                                <div key={index} className=\"row\" style={this.undoneStyle()}>\n                                                    <div className=\"col-12\">\n                                                        <h5 id={`${index}`} onClick={ () => {this.complete(`${index}`, val.task, group._id, index, i)} } style={undoneBlock}>{val.task}</h5>\n                                                        {/* <span style={displayBlock1}><i id={`icon_${index}`} style={circle1} className=\"fal fa-times\"></i></span> */}\n                                                    </div>\n                                                </div>\n                                            )                                            \n                                        }\n\n                                    })}\n\n                                       \n\n                                        {group.members.map((user, ind) => {\n                                            \n                                            if(user.member){\n                                               \n                                                return (\n                                                \n\n                                                        <h6 style={memberStyle} key={ind}>{user.member}</h6>\n                                              \n\n                                                )\n                                            }\n                                        })}\n\n                                </div>\n                                </div>                               \n\n\n/**end of group map */\n                    )}\n                    </div>\n                    </div>\n                    </div>\n\n                    <div className=\"modal fade\" id=\"exampleModal\" tabIndex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                  <div className=\"modal-dialog\">\n                    <div className=\"modal-content\">\n                      <div className=\"modal-header\">\n                        <h5 className=\"modal-title\" id=\"exampleModalLabel\">Find friends</h5>\n                        <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                      </div>\n                      <div id=\"modal-body\" className=\"modal-body\">\n                      <input id=\"userSearchInput\" className=\"form-control me-2\" type=\"search\" placeholder=\"Search by username\" aria-label=\"Search\"/>\n                      \n                      </div>\n                      \n                      <div className=\"modal-footer\">\n                          {/** thinking about putting onclick on button */}\n                        <button onClick={() => {\n                            let el = document.getElementById('userSearchInput').value;\n                            this.showSearch(el);\n                            console.log('button clicked');\n                        }} type=\"button\" className=\"btn btn-primary\">Search</button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n    \n                </div>\n                \n\n            )\n            \n        } else {\n            return (\n                <div>\n                    \n                    <h4 style={{marginTop:\"2em\", textAlign:\"center\"}} >You have no groups, start one! <a href=\"/creategroup\">here</a></h4>\n                </div>\n            )\n        }\n        \n    }\n\n    \n}\n\nconst cardHeader = {\n    background: \"#7f5fff\",\n    color: \"white\",\n    fontSize: \"20px\",\n    textAlign: \"left\",\n    fontFamily: \"Trispace\"\n}\n\nconst displayBlock = {\n    display: \"inline-block\",\n    // textDecoration: \"line-through\",\n    fontFamily:\"Trispace\",\n    color: \"#dbdbdb\",\n \n}\nconst doneBlock = {\n    display: \"inline-block\",\n    float: \"right\",\n}\nconst displayBlock1 = {\n    display: \"inline-block\",\n    float: \"right\"\n\n}\nconst undoneBlock = {\n    display: \"inline-block\",\n}\nconst circle = {\n    color: \"green\",\n}\nconst circle1 = {\n    color: \"red\",\n}\nconst memberStyle = {\n    display: \"inline-block\",\n    background: \"white\",\n    borderRadius: \"20px\",\n    color: \"#7f5fff\",\n    margin: \"10px\",\n    padding: \"15px\",\n}\nexport default GroupPage","/Users/drejackson/Desktop/react-todo/src/components/layout/protectedNav.js",["118","119","120","121"],"import React, { Component } from 'react'\nimport { CreateBrowserHistory } from 'history'\n\nclass ProtectedNav extends Component {\n\n    render(){\n        return(\n            <div className=\"\">\n            <div className=\"row\">\n            <div className=\"col-12 p-0\">\n                <nav className=\"navbar\" style={headerStyle}>\n                    <div style={containerStyle} className=\"container\">\n                        <a style={brandStyle} className=\"navbar-brand\" href=\"/\">GroupList</a>\n                        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                            <span className=\"navbar-toggler-icon\"><i className=\"fas fa-bars\" style={menuIcon}></i></span>\n                        </button>\n                        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                            <ul style={ulStyle} className=\"navbar-nav\">\n                                <li className=\"nav-item\">\n                                    <a style={aStyle} className=\"nav-link active\" href=\"/\" aria-current=\"page\"><span style={ulIcon}><i className=\"fad fa-home-lg-alt\"></i></span> Home </a>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <a style={aStyle} className=\"nav-link\" onClick={this.isAuth}><span style={ulIcon}><i className=\"fad fa-sign-in-alt\"></i></span> Dashboard</a>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <a style={aStyle} className=\"nav-link\" href=\"/\"><span style={ulIcon}><i className=\"fad fa-users\"></i></span> Groups</a>\n                                </li>\n                            </ul>\n                        </div>\n  \n                    </div>\n                </nav>\n            </div>\n        </div>\n\n        <div style={headerRow} className=\"row\">\n            <div className=\"col-6 d-flex justify-content-center align-items-center\">\n                <i style={iStyle} className=\"fab fa-twitter\"></i> \n                <i style={iStyle1} className=\"fab fa-facebook\"></i> \n                <i style={iStyle1} className=\"fas fa-envelope\"></i>\n            </div>\n        <div style={liFloatRight} className=\"col-6\">\n                8:34 PM\n        </div>\n    </div>\n</div>\n        )\n    }\n}\n\n\n//navbar style\nconst containerStyle = {\n    paddingLeft: '0'\n  }\n  \n  const headerStyle =  {\n      color: 'ghostwhite',\n      padding: '1em 10px 1em 10px',\n      textAlign: 'center',\n      background: 'linear-gradient(45deg, #7f5fff, #7f5fff, #5f8fff, #5f8fff)',\n      background: '#7f5fff',\n      boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px',\n  };\n  \n  const ulStyle = {\n      float: 'left',\n      color: 'ghostwhite !important'\n  }\n  \n  const menuIcon = {\n      fontSize: '30px',\n      color: 'ghostwhite',\n  }\n  \n  const brandStyle = {\n      color: 'ghostwhite',\n      background: '#4c4c4c',\n      background: 'transparent',\n      borderRadius: '20em',\n      padding: '10px',\n      fontFamily: 'Trispace',\n      boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px',\n  }\n  \n  const aStyle = {\n    textAlign: \"left\",\n    color: 'black',\n    fontFamily: 'Trispace',\n  }\n  \n  const ulIcon = {\n    color: 'black',\n  }\n\n  //alert style\nconst headerRow = {\n    padding: \"20px\",\n    background: \"white\",\n    boxShadow: \"rgba(0, 0, 0, 0.04) 0px 3px 5px\",\n}\nconst iStyle = {\n    fontSize: \"20px\"\n}\nconst iStyle1 = {\n    fontSize: \"20px\",\n    marginLeft: \"30px\"\n}\nconst liFloatRight = {\n    textAlign: \"right\",\n    fontFamily: 'Trispace',\n    fontSize: '20px',\n}\n\nexport default ProtectedNav",{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":36,"column":17,"nodeType":"128","endLine":36,"endColumn":78},{"ruleId":"129","severity":1,"message":"130","line":75,"column":5,"nodeType":"131","messageId":"132","endLine":75,"endColumn":15},{"ruleId":"126","severity":1,"message":"127","line":21,"column":31,"nodeType":"128","endLine":21,"endColumn":58},{"ruleId":"133","severity":1,"message":"134","line":4,"column":8,"nodeType":"135","messageId":"136","endLine":4,"endColumn":12},{"ruleId":"122","replacedBy":"137"},{"ruleId":"124","replacedBy":"138"},{"ruleId":"133","severity":1,"message":"139","line":176,"column":7,"nodeType":"135","messageId":"136","endLine":176,"endColumn":16},{"ruleId":"133","severity":1,"message":"140","line":182,"column":7,"nodeType":"135","messageId":"136","endLine":182,"endColumn":19},{"ruleId":"133","severity":1,"message":"141","line":188,"column":7,"nodeType":"135","messageId":"136","endLine":188,"endColumn":13},{"ruleId":"133","severity":1,"message":"142","line":191,"column":7,"nodeType":"135","messageId":"136","endLine":191,"endColumn":14},{"ruleId":"133","severity":1,"message":"143","line":211,"column":7,"nodeType":"135","messageId":"136","endLine":211,"endColumn":16},{"ruleId":"133","severity":1,"message":"144","line":220,"column":7,"nodeType":"135","messageId":"136","endLine":220,"endColumn":21},{"ruleId":"133","severity":1,"message":"145","line":230,"column":7,"nodeType":"135","messageId":"136","endLine":230,"endColumn":24},{"ruleId":"133","severity":1,"message":"146","line":237,"column":7,"nodeType":"135","messageId":"136","endLine":237,"endColumn":25},{"ruleId":"133","severity":1,"message":"147","line":254,"column":7,"nodeType":"135","messageId":"136","endLine":254,"endColumn":17},{"ruleId":"133","severity":1,"message":"148","line":259,"column":7,"nodeType":"135","messageId":"136","endLine":259,"endColumn":21},{"ruleId":"133","severity":1,"message":"149","line":265,"column":7,"nodeType":"135","messageId":"136","endLine":265,"endColumn":17},{"ruleId":"133","severity":1,"message":"150","line":269,"column":7,"nodeType":"135","messageId":"136","endLine":269,"endColumn":16},{"ruleId":"129","severity":1,"message":"130","line":284,"column":7,"nodeType":"131","messageId":"132","endLine":284,"endColumn":17},{"ruleId":"133","severity":1,"message":"151","line":298,"column":9,"nodeType":"135","messageId":"136","endLine":298,"endColumn":16},{"ruleId":"133","severity":1,"message":"152","line":303,"column":9,"nodeType":"135","messageId":"136","endLine":303,"endColumn":17},{"ruleId":"133","severity":1,"message":"153","line":318,"column":9,"nodeType":"135","messageId":"136","endLine":318,"endColumn":15},{"ruleId":"126","severity":1,"message":"127","line":20,"column":42,"nodeType":"128","endLine":20,"endColumn":45},{"ruleId":"126","severity":1,"message":"127","line":26,"column":41,"nodeType":"128","endLine":26,"endColumn":102},{"ruleId":"133","severity":1,"message":"154","line":141,"column":13,"nodeType":"135","messageId":"136","endLine":141,"endColumn":17},{"ruleId":"133","severity":1,"message":"155","line":167,"column":13,"nodeType":"135","messageId":"136","endLine":167,"endColumn":16},{"ruleId":"156","severity":1,"message":"157","line":287,"column":72,"nodeType":"158","messageId":"159","endLine":287,"endColumn":74},{"ruleId":"133","severity":1,"message":"160","line":373,"column":7,"nodeType":"135","messageId":"136","endLine":373,"endColumn":20},{"ruleId":"133","severity":1,"message":"161","line":384,"column":7,"nodeType":"135","messageId":"136","endLine":384,"endColumn":14},{"ruleId":"133","severity":1,"message":"162","line":2,"column":10,"nodeType":"135","messageId":"136","endLine":2,"endColumn":30},{"ruleId":"126","severity":1,"message":"127","line":23,"column":37,"nodeType":"128","endLine":23,"endColumn":98},{"ruleId":"129","severity":1,"message":"130","line":62,"column":7,"nodeType":"131","messageId":"132","endLine":62,"endColumn":17},{"ruleId":"129","severity":1,"message":"130","line":79,"column":7,"nodeType":"131","messageId":"132","endLine":79,"endColumn":17},"no-native-reassign",["163"],"no-negated-in-lhs",["164"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-dupe-keys","Duplicate key 'background'.","ObjectExpression","unexpected","no-unused-vars","'Todo' is defined but never used.","Identifier","unusedVar",["163"],["164"],"'headerRow' is assigned a value but never used.","'liFloatRight' is assigned a value but never used.","'iStyle' is assigned a value but never used.","'iStyle1' is assigned a value but never used.","'cardStyle' is assigned a value but never used.","'taskTitleStyle' is assigned a value but never used.","'notificationStyle' is assigned a value but never used.","'notificationStyle2' is assigned a value but never used.","'badgeStyle' is assigned a value but never used.","'taskTrackStyle' is assigned a value but never used.","'checkStyle' is assigned a value but never used.","'groupList' is assigned a value but never used.","'ulStyle' is assigned a value but never used.","'menuIcon' is assigned a value but never used.","'aStyle' is assigned a value but never used.","'icon' is assigned a value but never used.","'obj' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'displayBlock1' is assigned a value but never used.","'circle1' is assigned a value but never used.","'CreateBrowserHistory' is defined but never used.","no-global-assign","no-unsafe-negation"]