[{"/Users/drejackson/Desktop/react-todo/src/index.js":"1","/Users/drejackson/Desktop/react-todo/src/App.js":"2","/Users/drejackson/Desktop/react-todo/src/reportWebVitals.js":"3","/Users/drejackson/Desktop/react-todo/src/components/Todos.js":"4","/Users/drejackson/Desktop/react-todo/src/components/TodoItem.js":"5","/Users/drejackson/Desktop/react-todo/src/components/layout/header.js":"6","/Users/drejackson/Desktop/react-todo/src/components/layout/addTodo.js":"7","/Users/drejackson/Desktop/react-todo/src/components/layout/input.js":"8","/Users/drejackson/Desktop/react-todo/src/components/layout/time.js":"9"},{"size":478,"mtime":1610764516000,"results":"10","hashOfConfig":"11"},{"size":2784,"mtime":1611660905000,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1610763564000,"results":"13","hashOfConfig":"11"},{"size":756,"mtime":1611661370000,"results":"14","hashOfConfig":"11"},{"size":1212,"mtime":1611589656000,"results":"15","hashOfConfig":"11"},{"size":1606,"mtime":1611527159000,"results":"16","hashOfConfig":"11"},{"size":1101,"mtime":1611578345000,"results":"17","hashOfConfig":"11"},{"size":245,"mtime":1611503611000,"results":"18","hashOfConfig":"11"},{"size":385,"mtime":1611507362000,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"6mlk47",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/drejackson/Desktop/react-todo/src/index.js",[],["41","42"],"/Users/drejackson/Desktop/react-todo/src/App.js",["43"],"import React, { Component } from 'react'\nimport Task from './components/Todos'\nimport Header from './components/layout/header'\nimport Input from './components/layout/input'\nimport './App.css'\nimport axios from 'axios'\nimport Time from './components/layout/time'\n\nlet api = axios.create({\n  baseUrl: 'https://react-todo-17.herokuapp.com',\n  \n})\nconst base = 'http://localhost:4000';\n\nclass App extends Component {\n  _isMounted = false;\n\n  constructor(){\n    super();\n\n    this.state = {\n        tasks: [\n          { id: 10, task: \"wash car\"},\n        ]\n      }\n  }\n\n\n  componentDidMount() {\n    this._isMounted = true;\n \n\n\n      api\n        .get('/getData')\n        .then((result, err) => {\n          console.log('this is result data ', result);\n          if (this._isMounted) {\n            this.setState({\n              tasks: result.data,\n            });\n          }\n  \n        });\n\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n    \n \n    markComplete = (id, completed) => {\n      this.setState({\n        tasks: this.state.tasks.map(todo => {\n          if(todo.id === id){\n            console.log('found id', todo.id)\n            todo.completed = !todo.completed;\n\n            axios\n            .put('/updateComplete', {properties: {\n              id: id,\n              complete: todo.completed\n            }})\n            .then(result => {\n              if (this._isMounted) {\n                \n              }\n            });\n          }\n          return todo;\n        })\n      })\n    };\n\n    delTodo = (id) => {\n      this.setState({tasks: [...this.state.tasks.filter(todo => todo.id !== id)]})\n    }\n\n    update = (id, complete) => {\n\n      axios\n      .put('/updateComplete', {properties: {\n        id: id,\n        complete: complete\n      }})\n      .then(result => {\n        if (this._isMounted) {\n          console.log('is Mounted, updated field: ', result);\n        }\n      });\n\n    }\n\n    log = (id) => {\n      let todo = document.getElementById('todoBox').value;\n      if(todo.length > 0){\n        console.log('id ', this.state.tasks[this.state.tasks.length - 1].id);\n          axios.post('/postData', {task: todo, id: this.state.tasks[this.state.tasks.length - 1].id})\n          .then(result => {\n            let data = [...this.state.tasks]\n            data.push(result.data.post);\n            this.setState({\n              tasks: data\n            })\n          }).catch(err => console.log(err));\n      }\n  }\n\n    \n    render(){\n\n  \n    return (\n      <div className=\"App\">\n        <Header />\n        <Time />\n        <Input log={this.log} task={this.state.tasks}/>\n        <Task task={this.state.tasks} markComplete={this.markComplete}\n        delTodo={this.delTodo} update={this.update} log={this.log}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/Users/drejackson/Desktop/react-todo/src/reportWebVitals.js",[],"/Users/drejackson/Desktop/react-todo/src/components/Todos.js",[],"/Users/drejackson/Desktop/react-todo/src/components/TodoItem.js",[],["44","45"],"/Users/drejackson/Desktop/react-todo/src/components/layout/header.js",[],"/Users/drejackson/Desktop/react-todo/src/components/layout/addTodo.js",[],"/Users/drejackson/Desktop/react-todo/src/components/layout/input.js",[],"/Users/drejackson/Desktop/react-todo/src/components/layout/time.js",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":13,"column":7,"nodeType":"52","messageId":"53","endLine":13,"endColumn":11},{"ruleId":"46","replacedBy":"54"},{"ruleId":"48","replacedBy":"55"},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'base' is assigned a value but never used.","Identifier","unusedVar",["56"],["57"],"no-global-assign","no-unsafe-negation"]