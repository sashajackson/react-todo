[{"/Users/drejackson/Desktop/react-todo/src/index.js":"1","/Users/drejackson/Desktop/react-todo/src/App.js":"2","/Users/drejackson/Desktop/react-todo/src/reportWebVitals.js":"3","/Users/drejackson/Desktop/react-todo/src/components/Todos.js":"4","/Users/drejackson/Desktop/react-todo/src/components/TodoItem.js":"5","/Users/drejackson/Desktop/react-todo/src/components/layout/header.js":"6","/Users/drejackson/Desktop/react-todo/src/components/layout/addTodo.js":"7","/Users/drejackson/Desktop/react-todo/src/components/layout/input.js":"8","/Users/drejackson/Desktop/react-todo/src/components/layout/time.js":"9","/Users/drejackson/Desktop/react-todo/src/components/layout/alert.js":"10","/Users/drejackson/Desktop/react-todo/src/components/layout/signIn.js":"11","/Users/drejackson/Desktop/react-todo/src/routes/index.js":"12","/Users/drejackson/Desktop/react-todo/src/services/history.js":"13","/Users/drejackson/Desktop/react-todo/src/components/layout/dashboard.js":"14","/Users/drejackson/Desktop/react-todo/src/components/layout/signup.js":"15","/Users/drejackson/Desktop/react-todo/src/components/layout/signinmaster.js":"16","/Users/drejackson/Desktop/react-todo/src/components/layout/createGroup.js":"17","/Users/drejackson/Desktop/react-todo/src/components/layout/groupPage.js":"18","/Users/drejackson/Desktop/react-todo/src/components/layout/protectedNav.js":"19","/Users/drejackson/Desktop/react-todo/src/components/layout/loader.js":"20","/Users/drejackson/Desktop/react-todo/src/components/layout/slickslider.js":"21","/Users/drejackson/Desktop/react-todo/src/components/layout/mainPage.js":"22","/Users/drejackson/Desktop/react-todo/src/firebase/fbconfig.js":"23"},{"size":478,"mtime":1610764516000,"results":"24","hashOfConfig":"25"},{"size":7850,"mtime":1614407230000,"results":"26","hashOfConfig":"25"},{"size":362,"mtime":1610763564000,"results":"27","hashOfConfig":"25"},{"size":762,"mtime":1611741877000,"results":"28","hashOfConfig":"25"},{"size":1639,"mtime":1612278259000,"results":"29","hashOfConfig":"25"},{"size":1925,"mtime":1614418429000,"results":"30","hashOfConfig":"25"},{"size":1096,"mtime":1611677459000,"results":"31","hashOfConfig":"25"},{"size":245,"mtime":1611503611000,"results":"32","hashOfConfig":"25"},{"size":1363,"mtime":1611707138000,"results":"33","hashOfConfig":"25"},{"size":560,"mtime":1611876156000,"results":"34","hashOfConfig":"25"},{"size":1702,"mtime":1612553362000,"results":"35","hashOfConfig":"25"},{"size":309,"mtime":1611726127000,"results":"36","hashOfConfig":"25"},{"size":110,"mtime":1611723305000,"results":"37","hashOfConfig":"25"},{"size":9960,"mtime":1613426090000,"results":"38","hashOfConfig":"25"},{"size":1705,"mtime":1612553354000,"results":"39","hashOfConfig":"25"},{"size":334,"mtime":1612547855000,"results":"40","hashOfConfig":"25"},{"size":5950,"mtime":1613423287000,"results":"41","hashOfConfig":"25"},{"size":16579,"mtime":1613193877000,"results":"42","hashOfConfig":"25"},{"size":3687,"mtime":1612232377000,"results":"43","hashOfConfig":"25"},{"size":660,"mtime":1612469027000,"results":"44","hashOfConfig":"25"},{"size":0,"mtime":1612458364000,"results":"45","hashOfConfig":"25"},{"size":3809,"mtime":1614418109000,"results":"46","hashOfConfig":"25"},{"size":525,"mtime":1613424213000,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"l1lvwa",{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"50"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"77"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"50"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"/Users/drejackson/Desktop/react-todo/src/index.js",[],["104","105"],"/Users/drejackson/Desktop/react-todo/src/App.js",["106","107","108","109"],"import React, { Component } from 'react'\nimport Task from './components/Todos'\nimport Header from './components/layout/header'\nimport Input from './components/layout/input'\nimport './App.css'\nimport axios from 'axios'\nimport { storage } from './firebase/fbconfig'\nimport Time from './components/layout/time'\nimport Alert from './components/layout/alert'\nimport SignIn from './components/layout/signIn'\nimport CreateGroup from './components/layout/createGroup'\nimport SUMaster from './components/layout/signinmaster'\nimport GroupPage from './components/layout/groupPage'\nimport Main from './components/layout/mainPage'\nimport { Router, Route, Redirect, Switch } from 'react-router-dom'\nimport history from '../src/services/history'\nimport Dashboard from './components/layout/dashboard'\nimport {createBrowserHistory } from 'history'\nimport Loader from './components/layout/loader'\n\n\nclass App extends Component {\n  _isMounted = false;\n  _history = createBrowserHistory({forceRefresh: true});\n  _user;\n\n  constructor(){\n    super();\n\n    this.state = {\n        tasks: [],\n        isAuth: true,\n        user: [{username: 'Planning with friends, for fun.'}],\n\n      }\n  }\n\n\n\n  componentDidMount() {\n    this._isMounted = true;\n\n      axios\n        .get('/getData')\n        .then((result, err) => {\n          if (this._isMounted) {\n            this.setState({\n              tasks: result.data,\n            });\n          }\n  \n        });\n\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n    markComplete = (id, completed) => {\n      this.setState({\n        tasks: this.state.tasks.map(todo => {\n          if(todo.id === id){\n            todo.completed = !todo.completed;\n\n            axios\n            .put('/updateComplete', {properties: {\n              id: id,\n              complete: todo.completed\n            }})\n            .then(result => {\n              if (this._isMounted) {\n                \n              }\n            });\n          }\n          return todo;\n        })\n      })\n    };\n\n    delTodo = (id) => {\n      this.setState({tasks: [...this.state.tasks.filter(todo => todo.id !== id)]})\n      \n      axios\n        .post('/delete', { id: id})\n          .then((response) => {\n            // console.log(response)\n          })\n    }\n\n    update = (id, complete) => {\n\n      axios\n      .put('/updateComplete', {properties: {\n        id: id,\n        complete: complete\n      }})\n      .then(result => {\n        if (this._isMounted) {\n          // console.log('is Mounted, updated field: ', result);\n        }\n      });\n\n    }\n\n    log = (id) => {\n      let todo = document.getElementById('todoBox').value;\n      if(todo.length > 0){\n          axios.post('/postData', {task: todo, id: this.state.tasks[this.state.tasks.length - 1].id})\n          .then(result => {\n            let data = [...this.state.tasks]\n            data.push(result.data.post);\n            this.setState({\n              tasks: data\n            })\n          }).catch(err => console.log(err));\n      }\n  }\n\n  submitSignIn = () => {\n    if(this.isAuth()){\n      this._history.push('/dashboard')\n      return;\n    }\n    let e = document.getElementById(\"email\").value;\n    let p = document.getElementById(\"password\").value;\n    let obj;\n\n    if(e.length > 0 && p.length > 0){\n        obj = {\n            email: e,\n            password: p,\n        }\n    } else {\n        obj = {\n            email: \"na\",\n            password: \"na\"\n        }\n    }\n      axios\n        .post('/signInApp', {email: obj.email, password: obj.password})\n          .then(response => {\n            if(response.data.length > 0){\n              if(response.data[0].password === obj.password){\n                localStorage.setItem('isAuth', 'true');\n                localStorage.setItem('fx', response.data[0]._id);\n                this.user = response.data[0].username;\n                return this._history.push('/dashboard')\n              } else {\n                return this._history.push('/');\n              }\n            } \n          })\n         return (\n           <Loader />\n         )\n \n  }\n\n  isAuth = () => {\n    let bool = localStorage.getItem('isAuth');\n    if(bool){\n      return true;\n    }\n\n    return false;\n  }\n\n  addUser = () => {\n    let email = document.getElementById('saveEmail').value;\n    let password = document.getElementById('savePassword').value;\n    let username = document.getElementById('saveUsername').value;\n\n    if(email && password && username){\n        let obj = {\n            u: username,\n            e: email,\n            p: password,\n        }\n        axios\n            .post('/signup', obj)\n                .then(result => {\n                    this.setState({\n                      user: [ result.data.user ]\n                    })\n\n                    localStorage.setItem('isAuth', 'true');\n                    localStorage.setItem('fx', this.state.user[0]._id);\n                    this._history.push('/dashboard')\n                  });\n                  \n    } else {\n        console.log('must enter username, email and password');\n    }\n\n    console.log('user added..');\n}\n\ncreateGroup = (pic) => {\n  let task1 = document.getElementById(\"task1\").value;\n  let task2 = document.getElementById(\"task2\").value;\n  let task3 = document.getElementById(\"task3\").value;\n  let title = document.getElementById(\"groupTitle\").value;\n\n  if(task1 && task2 && task3){\n\n    if(pic !== null){\n      const uploadTask = storage.ref(`images/${pic.name}`).put(pic);\n      uploadTask.on('state_changed', snapshot => {}, err => { console.log(err) }, () => {\n        storage\n        .ref(\"images\")\n        .child(pic.name).getDownloadURL().then(url => { \n  \n          let obj = {\n            title: title,\n            oneTask: task1,\n            twoTask: task2,\n            threeTask: task3,\n            storageId: localStorage.getItem('fx'),\n            upload: url,\n          }\n          \n            axios\n              .post('/createGroup', obj)\n                .then(result => {\n                  this._history.push('/dashboard');\n                })\n          });\n      })\n\n    } else if(pic === null){\n      let obj = {\n        title: title,\n        oneTask: task1,\n        twoTask: task2,\n        threeTask: task3,\n        storageId: localStorage.getItem('fx'),\n        upload: null,\n      }\n      \n        axios\n          .post('/createGroup', obj)\n            .then(result => {\n              this._history.push('/dashboard');\n            })      \n    }\n    \n  } else {\n    console.log('must enter tasks')\n  }\n\n\n\n\n\n\n\n\n\n\n}\n    \n    render(){\n\n  \n    return (\n      <div className=\"App\">\n        \n          <Router history={history}>\n\n          <Switch>\n            <Route exact path=\"/creategroup\">\n              <CreateGroup createGroup={this.createGroup} />\n            </Route>\n\n            <Route exact path=\"/loader\">\n              <Loader />\n            </Route>\n\n            <Route exact path=\"/signup\" render={() => (\n              this.isAuth() ? <Dashboard user={this.state.user[0]} /> : <SUMaster addUser={this.addUser} /> \n              )}>\n            </Route>\n\n            <Route exact path=\"/signIn\" render={() => (\n              this.isAuth() ? <Dashboard user={this.state.user[0]} /> : <SignIn submitSignIn={this.submitSignIn} /> \n              )}>\n\n            </Route>\n        \n            <Route exact path=\"/dashboard\" render={() => (\n              this.isAuth() ? <Dashboard user={this.state.user[0]} /> : <Redirect to=\"/signIn\" /> \n              )} >\n            </Route>\n\n            <Route exact path=\"/groups\" render={() => (\n              this.isAuth() ? <GroupPage /> : <Redirect to=\"/signIn\" />\n              )}>\n            </Route>\n\n            <Route exact path=\"/\" >\n              <Header />\n              <Main />\n            </Route>\n\n            </Switch>\n\n          </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n","/Users/drejackson/Desktop/react-todo/src/reportWebVitals.js",[],"/Users/drejackson/Desktop/react-todo/src/components/Todos.js",[],"/Users/drejackson/Desktop/react-todo/src/components/TodoItem.js",[],"/Users/drejackson/Desktop/react-todo/src/components/layout/header.js",["110","111","112","113","114","115"],"import React, {Component} from 'react' \nimport {createBrowserHistory } from 'history'\nimport {Link} from 'react-router-dom'\nimport './header.css'\n\nclass Header extends Component {\n  _history = createBrowserHistory({forceRefresh: true});\n  display = 'Login';\n  isAuth = () => {\n      if(localStorage.getItem('isAuth')){\n        console.log('page should be changed now');\n          this._history.push('/dashboard');\n          this.display = 'Dashboard';\n      } else {\n        this._history.push('/signIn');\n        this.display = 'Sign In'\n      }\n  }\n  \n\n\n    render(){\n\n      return (\n        <nav className=\"navbar\" style={headerStyle}>\n        <div style={containerStyle} className=\"container-fluid\">\n          <a style={brandStyle} className=\"navbar-brand\" href=\"/\">\n            <img style={logo} src=\"https://projectsbucketsj.s3.us-east-2.amazonaws.com/image_6487327-removebg-preview.png\"/>\n          </a>\n          <div class=\"\">\n            <form class=\"container-fluid justify-content-end\">\n              <Link to='/signIn' class=\"btn btn-success me-2\" type=\"button\">Login</Link>\n              <Link to='/signup' class=\"btn btn-secondary\" type=\"button\">Register</Link>\n            </form>\n          </div>\n      </div>\n      </nav>\n      )\n    }\n}\nconst logo = {\n  height: '50px',\n  width: 'auto',\n}\nconst containerStyle = {\n  paddingLeft: '0'\n}\n\nconst headerStyle =  {\n    color: 'ghostwhite',\n    padding: '10px',\n    textAlign: 'center',\n    background: 'black',\n    boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px',\n};\n\nconst ulStyle = {\n    float: 'left',\n    color: 'ghostwhite !important'\n}\n\nconst menuIcon = {\n    fontSize: '30px',\n    color: 'ghostwhite',\n}\n\nconst brandStyle = {\n    color: 'ghostwhite',\n    background: '#4c4c4c',\n    background: 'transparent',\n}\n\nconst aStyle = {\n  textAlign: \"left\",\n  color: 'black',\n  fontFamily: 'Trispace',\n}\n\nconst ulIcon = {\n  color: 'black',\n}\n\nexport default Header;","/Users/drejackson/Desktop/react-todo/src/components/layout/addTodo.js",[],"/Users/drejackson/Desktop/react-todo/src/components/layout/input.js",[],"/Users/drejackson/Desktop/react-todo/src/components/layout/time.js",[],"/Users/drejackson/Desktop/react-todo/src/components/layout/alert.js",[],"/Users/drejackson/Desktop/react-todo/src/components/layout/signIn.js",["116"],"import React, {Component} from 'react'\nimport {createBrowserHistory } from 'history'\nimport Header from './header'\n\nclass SignIn extends Component {\n    _history = createBrowserHistory({forceRefresh: true});\n\n    redirect = () => {\n        this._history.push('/signup');\n    }\n\n    render(){\n        return (\n            <div>\n            <Header />\n            <div style={rowStyle} className=\"row\">\n                <div className=\"col-2\"></div>\n                <div className=\"col-8\">\n                    <div style={cardStyle} className=\"card\">\n                        <h5 style={{textAlign: \"center\"}} className=\"card-title\">Sign In Console</h5>\n                        <input autoComplete=\"off\" style={inputStyle} type=\"text\" id=\"email\" name=\"email\" placeholder=\"enter email\"></input>\n                        <input autoComplete=\"off\" style={inputStyle} type=\"password\" id=\"password\" name=\"password\" placeholder=\"enter password\"></input>\n                        <button style={btnStyle} className=\"btn\" onClick={this.props.submitSignIn}>Submit</button>\n                        <p style={{textAlign:\"center\", marginTop:\"1em\"}}>or <a onClick={this.redirect}>Sign Up</a></p>\n\n                    </div>\n                </div>\n                <div className=\"col-2\"></div>\n            </div>\n            </div>\n        )\n    }\n}\n\nconst inputStyle = {\n    margin: \"20px 0\",\n    borderRadius: \"30px\",\n    height: \"50px\",\n    border: \"none\",\n    background: \"#f4f4f4\",\n    paddingLeft: \"20px\"\n}\n\nconst cardStyle = {\n    padding: \"20px\",\n    background: \"f4f4f4\",\n}\n\nconst btnStyle = {\n    background: \"black\",\n    color: \"ghostwhite\"\n}\n\nconst rowStyle = {\n    paddingTop: \"2em\",\n}\n\nexport default SignIn\n","/Users/drejackson/Desktop/react-todo/src/routes/index.js",["117"],"import React from 'react'\nimport {Switch, Route} from 'react-router-dom'\nimport SignIn from '../components/layout/signIn'\nimport Todo from '../components/Todos'\n\nexport default function Routes() {\n    return (\n        <Switch>\n            <Route path=\"/signIn\" component={SignIn} />\n        </Switch>\n    )\n}\n",["118","119"],"/Users/drejackson/Desktop/react-todo/src/services/history.js",[],"/Users/drejackson/Desktop/react-todo/src/components/layout/dashboard.js",[],"/Users/drejackson/Desktop/react-todo/src/components/layout/signup.js",[],"/Users/drejackson/Desktop/react-todo/src/components/layout/signinmaster.js",[],"/Users/drejackson/Desktop/react-todo/src/components/layout/createGroup.js",["120"],"import React, { Component, useState } from 'react'\nimport { Link } from 'react-router-dom'\n\nclass CreateGroup extends Component {\n\nconstructor(props){\n    super(props)\n    this.state = {\n        image: null,\n    }\n}\n\n\nhandleChange = (e) => {\n    if(e.target.files[0]){\n        this.setState({\n            image: e.target.files[0],\n        })\n    } \n}\n\nhandleUpload = () => {\n    if(this.state.image !== null){\n        this.props.createGroup(this.state.image);        \n    } else {\n        this.props.createGroup(null);        \n    }\n}\n\n\n    render(){\n        return (\n            <div>\n\n<div className=\"row\">\n                <div className=\"col-12\">\n                    <nav className=\"navbar\" style={headerStyle}>\n                        <div style={containerStyle} className=\"container-fluid\">\n                            <a style={brandStyle} className=\"navbar-brand\" href=\"/\">GroupList</a>\n                            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                                <span className=\"navbar-toggler-icon\"><i className=\"fas fa-bars\" style={menuIcon}></i></span>\n                            </button>\n                            <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                                <ul style={ulStyle} className=\"navbar-nav\">\n                                    <li className=\"nav-item\">\n                                        <a style={aStyle} className=\"nav-link active\" href=\"/\" aria-current=\"page\"><span style={ulIcon}><i className=\"fad fa-home-lg-alt\"></i></span> Home </a>\n                                    </li>\n                                    <Link to=\"/dashboard\" className=\"nav-item\">\n                                    <i className=\"fad fa-sign-in-alt\"></i> Dashboard\n                                    </Link>\n                                    <li className=\"nav-item\">\n                                        <a style={aStyle} className=\"nav-link\" href=\"/\"><span style={ulIcon}><i className=\"fad fa-users\"></i></span> Groups</a>\n                                    </li>\n                                </ul>\n                            </div>\n      \n                        </div>\n                    </nav>\n                </div>\n            </div>\n\n            <div style={headerRow} className=\"row\">\n                <div className=\"col-6 d-flex justify-content-center align-items-center\">\n                    <i style={iStyle} className=\"fab fa-twitter\"></i> \n                    <i style={iStyle1} className=\"fab fa-facebook\"></i> \n                    <i style={iStyle1} className=\"fas fa-envelope\"></i>\n                </div>\n                <div style={liFloatRight} className=\"col-6\">\n                    8:34 PM\n                </div>\n            </div>\n\n\n\n            <div style={{padding: \"20px\"}} className=\"row\">\n\n                <div style={{paddingTop: \"30px\"}} className=\"col-12\">\n                <div style={{padding: \"20px\"}} className=\"card\">\n                    <h5 style={{padding: \"20px\", textAlign: \"center\", fontFamily: 'Trispace',}} className=\"card-title\">Don't forget to invite your friends!</h5>\n                <div className=\"input-group\">\n                    <span className=\"input-group-text\">Group Name</span>\n                    <input id=\"groupTitle\" type=\"text\" aria-label=\"First name\" className=\"form-control\"/>\n                </div>\n\n                <h5 style={{padding: \"20px\", textAlign: \"center\", fontFamily: 'Trispace',}} className=\"card-title\">Add Task</h5>\n                <div className=\"input-group mb-3\">\n                    <input type=\"text\" id=\"task1\" className=\"form-control\" placeholder=\"Enter task..\" aria-label=\"Username\" aria-describedby=\"basic-addon1\"/>               \n                </div>\n                <div className=\"input-group mb-3\">\n                    <input type=\"text\" id=\"task2\" className=\"form-control\" placeholder=\"Enter task..\" aria-label=\"Username\" aria-describedby=\"basic-addon1\"/>              \n                </div>\n                <div className=\"input-group mb-3\">\n                    <input type=\"text\" id=\"task3\" className=\"form-control\" placeholder=\"Enter task..\" aria-label=\"Username\" aria-describedby=\"basic-addon1\"/>               \n                </div>\n                <div className=\"input-group mb-3\">\n                <input id=\"groupFile\" type=\"file\" onChange={this.handleChange}/>\n                </div>\n                <button style={submitStyle} type=\"button\" className=\"btn btn-primary\" onClick={this.handleUpload}>Create Group</button>\n        </div>\n    </div>\n     \n</div>\n</div>\n        )\n    }\n}\n\n//form style\nconst submitStyle = {\n    background: \"#7f5fff\",\n    border: \"none\",\n}\n\n//navbar style\nconst containerStyle = {\n    paddingLeft: '0'\n  }\n  \nconst headerStyle =  {\n      color: 'ghostwhite',\n      padding: '1em 10px 1em 10px',\n      textAlign: 'center',\n      background: '#7f5fff',\n      boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px',\n  };\n  \nconst ulStyle = {\n      float: 'left',\n      color: 'ghostwhite !important'\n  }\n  \nconst menuIcon = {\n      fontSize: '30px',\n      color: 'ghostwhite',\n  }\n  \nconst brandStyle = {\n      color: 'ghostwhite',\n      background: 'transparent',\n      borderRadius: '20em',\n      padding: '10px',\n      fontFamily: 'Trispace',\n      boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px',\n  }\n  \nconst aStyle = {\n    textAlign: \"left\",\n    color: 'black',\n    fontFamily: 'Trispace',\n  }\n  \nconst ulIcon = {\n    color: 'black',\n  }\nconst iStyle = {\n    fontSize: \"20px\"\n}\nconst iStyle1 = {\n    fontSize: \"20px\",\n    marginLeft: \"30px\"\n}\nconst liFloatRight = {\n    textAlign: \"right\",\n    fontFamily: 'Trispace',\n    fontSize: '20px',\n}\nconst headerRow = {\n    padding: \"20px\",\n    background: \"white\",\n    boxShadow: \"rgba(0, 0, 0, 0.04) 0px 3px 5px\",\n} \n\nexport default CreateGroup","/Users/drejackson/Desktop/react-todo/src/components/layout/groupPage.js",["121","122","123","124","125","126"],"import React , { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\nimport Loader from './loader'\nimport {createBrowserHistory } from 'history'\nimport './gp.css'\n\nclass GroupPage extends Component {\n    _isMounted = false;\n    _history = createBrowserHistory({forceRefresh:true})\n    count = 0;\n\n\n    constructor(props){\n        super(props);\n        this.state = {\n            groups: [],\n            userInfo: [],\n            users: [],\n            requestComplete: false,\n        }\n    }\n\n    undoneStyle = () => {\n        return {\n            background: 'white',\n            padding: '10px',\n            borderBottom: '1px #ccc dotted',\n            fontSize: '20px',\n            margin: \"0 20px 20px 20px\",\n            borderRadius: \"30px\"\n        }\n      }\n    doneStyle = () => {\n        return {\n            background: 'white',\n            padding: '10px',\n            borderBottom: '1px #ccc dotted',\n            fontSize: '20px',\n            margin: \"0 20px 20px 20px\",\n            borderRadius: \"30px\"\n        }\n      }\n\n\n    componentDidMount = async () => {\n        this._isMounted = true;\n\n            let obj = {\n                id: localStorage.getItem('fx')\n            }\n\n            await axios\n                .post('/mygroups', obj)\n                    .then(res => {\n                        if(this._isMounted){\n                            this.setState({\n                                groups: res.data,\n                                requestComplete: true,\n                            })\n                        }\n                    })\n            let obj1 = {\n                id: localStorage.getItem('fx')\n            }\n            await axios\n                    .post('/getUserData', obj1)\n                        .then(result => {\n                            this.setState({\n                                groups: this.state.groups,\n                                userInfo: result.data,\n                                requestComplete: true,\n                            })\n                           \n                        })\n            await axios \n                        .get('/getUsers')\n                            .then(result => {\n                                let newArray = [];\n                                result.data.forEach(obj => {\n                                    let newObj = {};\n                                    newObj.username = obj.username;\n                                    newObj.id = obj._id\n                                    newArray.push(newObj);\n                                })\n                                this.setState({\n                                    groups: this.state.groups,\n                                    userInfo: this.state.userInfo,\n                                    users: newArray,\n                                    requestComplete: true,\n                                })\n                            }).catch(err => console.log(err))\n    }\n\n    componentDidUpdate(prevProps) {\n        if(this.state.groups.length !== 0){\n        }\n      }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n      }\n\n    addCount = () => {\n        this.count = this.count++;\n        return this.count;\n    }\n\n\n    myGroupsCall = () => {\n\n            let obj = {\n                id: localStorage.getItem('fx')\n            }\n\n            axios\n                .post('/mygroups', obj)\n                    .then(res => {\n                        if(this._isMounted){\n                            this.setState({\n                                groups: [res.data],\n                                requestComplete: true,\n                            })\n                            console.log('res ', res)\n                        }\n                    })\n    }\n\n    complete = (id, task, groupId, index, groupIndex) => {\n\n        let complete = this.state.groups[groupIndex].groupTask.filter(v => v.task === task)\n        complete.completed = true;\n        let elem = document.getElementById(id);\n        let icon = document.getElementById(`icon_` + id)\n        elem.style.textDecoration = 'line-through';\n        elem.style.color = '#f4f4f4';\n        console.log(groupIndex);\n        this.updateRecord(groupId, task, index);\n        this._history.push('/dashboard');\n       \n    }\n\n\n    updateRecord = (_id, _task, _index) => {\n        let obj = {\n            id: _id,\n            task: _task,\n            index: _index,\n            completedBy: localStorage.getItem('fx')\n        }\n\n        axios\n            .put('/updateTask', obj)\n                .then(result => {\n                    console.log('updateTask result data ', result.data)\n                }).catch(err => console.log(err));\n    }\n\n    getUser = async () => {\n        let ls = localStorage.getItem('fx');\n        let obj = {\n            id: ls,\n        }\n        let hi = 'hi';\n        return hi;\n    }\n\n    showSearch = (username) => {\n        let flag = false;\n        let usr;\n        let uId;\n        console.log('incoming username ', username);\n        if(this.state.users.length > 0){\n            this.state.users.forEach(val => {\n                if(val.username === username){\n                    console.log('found a match')\n                    flag = true;\n                    usr = val.username;\n                    uId = val.id;\n                }\n            })\n        }\n\n        if(flag){\n            console.log('this is usr ', usr);\n            let div = document.createElement('div');\n            let span = document.createElement('span');\n            div.className = 'spanDiv';\n            span.className = 'userSearch';\n            span.innerHTML = usr;\n            let modalBody = document.getElementById('modal-body');\n            div.addEventListener('click', (e) => {\n                console.log(this.state.clickedCard)\n                let obj = {\n                    id: this.state.clickedCard,\n                    user: usr,\n                    userId: uId\n                }\n                axios\n                    .post('/updateMembers', obj)\n                        .then(result => {\n                            this.setState({\n                                groups: this.state.groups,\n                                userInfo: this.state.userInfo,\n                                users: this.state.users,\n                                requestComplete: true,\n                            })\n                        })\n                        this._history.push('/dashboard')\n            })\n            div.appendChild(span);\n            modalBody.appendChild(div);\n            return usr;\n        }\n        console.log('users is empty');\n        return 'user does not exist'\n    }\n\n    deleteGroup = (id) => {\n        let obj = {\n            id: id,\n        }\n        axios.post('/deleteGroup', obj);\n        console.log('item deleted');\n        this._history.push('/dashboard')\n    }\n\n    addGroupTask = (e) => {\n        let g = localStorage.getItem('g');\n        let createTask = document.getElementById('taskToGroup').value;\n        console.log(createTask.length);\n\n        if(createTask.length !== 0 && g){\n            let obj = {\n                id: g,\n                storageId: localStorage.getItem('fx'),\n                task: createTask,\n            }\n    \n            axios.post('/createGroupTask', obj);\n            this._history.push('/dashboard');\n            localStorage.removeItem('g')\n\n        } else {\n            alert('You must enter a task before submitting');\n        }\n    }\n\n\n    render(){\n\n        if(this.state.groups.length !== 0){\n\n            return(\n                <div className=\"\">\n    \n                    \n                    \n                    <div className=\"row\">\n                    <div className=\"col-12\">\n                    <div className=\"card-group\">\n                    {this.state.groups.map((group, i) => \n                        <div key={i} className=\"card text-dark bg-light m-3\" style={{}}>\n                            <div style={cardHeader} className=\"card-header\">{group.title}\n                            <i onClick={() => {\n                                this.setState({\n                                    groups: this.state.groups,\n                                    userInfo: this.state.userInfo,\n                                    users: this.state.users,\n                                    requestComplete: this.state.requestComplete,\n                                    clickedCard: group._id,\n                                })\n                                }} data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\" style={{color:\"white\", float:\"right\", marginTop:\"5px\"}} className=\"fal fa-user-plus\"></i>\n                                <i onClick={() => {\n                                    this.deleteGroup(group._id);\n                                }} style={{color:\"white\", float:\"right\", marginRight:\"30px\", marginTop:\"5px\"}} className=\"fal fa-trash-alt\"></i>\n                                <i onClick={() => {\n                                    localStorage.setItem('g', group._id)\n                                }} data-bs-toggle=\"modal\" data-bs-target=\"#modal2\" style={{color:\"white\", float:\"right\", marginRight:\"30px\", marginTop:\"5px\"}} className=\"fal fa-plus\"></i>\n                            </div>\n                                <div className=\"card-body\">\n                                    {group.groupTask.map((val, index) => {\n\n                                        if(this.state.groups[i].groupTask[index].completed && this.state.groups[i].groupTask[index].completedBy === []){\n                                            \n                                            return (\n                                                <div key={index} className=\"row\" style={this.doneStyle()}>\n                                                    <div className=\"col-12\">\n                                                        <h5 id={`${index}`} onClick={ () => {this.complete(`${index}`, val.task, group._id, index)} } style={displayBlock}>{val.task}</h5>\n                                                        <span style={doneBlock}><i id={`icon_${index}`} style={circle} className=\"fas fa-circle\"></i></span>\n                                                    </div>\n                                                </div>\n                                            )\n                                        } else if(this.state.groups[i].groupTask[index].completed && this.state.groups[i].groupTask[index].completedBy !== []){\n                                            return (\n                                                <div key={index} className=\"row\" style={this.doneStyle()}>\n                                                    <div className=\"col-12\">\n                                                        <h5 id={`${index}`} onClick={ () => {this.complete(`${index}`, val.task, group._id, i)} } style={displayBlock}>{val.task}</h5>\n                                                        <h5 style={doneBlock} className=\"mb-0\">\n\n                                                        <span style={{fontFamily:\"Trispace\", fontSize:\"13px\"}}> <i style={{color:\"green\"}} className=\"fal fa-check\"></i> @{val.completedBy}</span>\n                                                        </h5>\n                                                    </div>\n                                                </div>\n                                            )\n                                        } else {\n                                            return (\n                                                <div key={index} className=\"row\" style={this.undoneStyle()}>\n                                                    <div className=\"col-12\">\n                                                        <h5 id={`${index}`} onClick={ () => {this.complete(`${index}`, val.task, group._id, index, i)} } style={undoneBlock}>{val.task}</h5>\n                                                    </div>\n                                                </div>\n                                            )                                            \n                                        }\n\n                                    })}\n\n                                       \n\n                                        {group.members.map((user, ind) => {\n                                            \n                                            if(user.member){\n                                               \n                                                return (\n                                                \n\n                                                        <h6 style={memberStyle} key={ind}>{user.member}</h6>\n                                              \n\n                                                )\n                                            }\n                                        })}\n\n                                </div>\n                                </div>                               \n\n\n/**end of group map */\n                    )}\n                    </div>\n                    </div>\n                    </div>\n\n                    <div className=\"modal fade\" id=\"exampleModal\" tabIndex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                  <div className=\"modal-dialog\">\n                    <div className=\"modal-content\">\n                      <div className=\"modal-header\">\n                        <h5 className=\"modal-title\" id=\"exampleModalLabel\">Find friends</h5>\n                        <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                      </div>\n                      <div id=\"modal-body\" className=\"modal-body\">\n                      <input id=\"userSearchInput\" className=\"form-control me-2\" type=\"search\" placeholder=\"Search by username\" aria-label=\"Search\"/>\n                      \n                      </div>\n                      \n                      <div className=\"modal-footer\">\n                        <Link to=\"/dashboard\" onClick={() => {\n                            let el = document.getElementById('userSearchInput').value;\n                            this.showSearch(el);\n                            \n                        }} type=\"button\" className=\"btn searchBtn\">Search</Link>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"modal\" tabIndex=\"-1\" id=\"modal2\">\n                    <div className=\"modal-dialog\">\n                        <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h5 className=\"modal-title\">Create a group task</h5>\n                            <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                        </div>\n                        <div className=\"modal-body\">\n                        <input id=\"taskToGroup\" type=\"text\" class=\"form-control\" placeholder=\"enter task\" aria-label=\"Username\" aria-describedby=\"basic-addon1\"/>\n                        </div>\n                        <div className=\"modal-footer\">\n                            <button onClick={() => {\n                                this.addGroupTask();\n                            }} type=\"button\" className=\"btn btn-primary\">Submit</button>\n                        </div>\n                        </div>\n                    </div>\n                </div>\n    \n                </div>\n                \n\n            )\n            \n        } else {\n            return (\n                <div>\n                    \n                    <h6 className=\"p-3 text-center mt-2\">Hey, you don't have any groups. Add some!</h6>\n                </div>\n            )\n        }\n        \n    }\n\n    \n}\n\nconst cardHeader = {\n    background: \"#7f5fff\",\n    color: \"white\",\n    fontSize: \"20px\",\n    textAlign: \"left\",\n    fontFamily: \"Trispace\"\n}\n\nconst displayBlock = {\n    display: \"inline-block\",\n    fontFamily:\"Trispace\",\n    color: \"#dbdbdb\",\n \n}\nconst doneBlock = {\n    display: \"inline-block\",\n    float: \"right\",\n}\nconst displayBlock1 = {\n    display: \"inline-block\",\n    float: \"right\"\n\n}\nconst undoneBlock = {\n    display: \"inline-block\",\n}\nconst circle = {\n    color: \"green\",\n}\nconst circle1 = {\n    color: \"red\",\n}\nconst memberStyle = {\n    display: \"inline-block\",\n    background: \"white\",\n    borderRadius: \"20px\",\n    color: \"#7f5fff\",\n    margin: \"10px\",\n    padding: \"15px\",\n}\nexport default GroupPage","/Users/drejackson/Desktop/react-todo/src/components/layout/protectedNav.js",["127","128","129","130"],"import React, { Component } from 'react'\nimport { CreateBrowserHistory } from 'history'\n\nclass ProtectedNav extends Component {\n\n    render(){\n        return(\n            <div className=\"\">\n            <div className=\"row\">\n            <div className=\"col-12 p-0\">\n                <nav className=\"navbar\" style={headerStyle}>\n                    <div style={containerStyle} className=\"container\">\n                        <a style={brandStyle} className=\"navbar-brand\" href=\"/\">GroupList</a>\n                        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                            <span className=\"navbar-toggler-icon\"><i className=\"fas fa-bars\" style={menuIcon}></i></span>\n                        </button>\n                        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                            <ul style={ulStyle} className=\"navbar-nav\">\n                                <li className=\"nav-item\">\n                                    <a style={aStyle} className=\"nav-link active\" href=\"/\" aria-current=\"page\"><span style={ulIcon}><i className=\"fad fa-home-lg-alt\"></i></span> Home </a>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <a style={aStyle} className=\"nav-link\" onClick={this.isAuth}><span style={ulIcon}><i className=\"fad fa-sign-in-alt\"></i></span> Dashboard</a>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <a style={aStyle} className=\"nav-link\" href=\"/\"><span style={ulIcon}><i className=\"fad fa-users\"></i></span> Groups</a>\n                                </li>\n                            </ul>\n                        </div>\n  \n                    </div>\n                </nav>\n            </div>\n        </div>\n\n        <div style={headerRow} className=\"row\">\n            <div className=\"col-6 d-flex justify-content-center align-items-center\">\n                <i style={iStyle} className=\"fab fa-twitter\"></i> \n                <i style={iStyle1} className=\"fab fa-facebook\"></i> \n                <i style={iStyle1} className=\"fas fa-envelope\"></i>\n            </div>\n        <div style={liFloatRight} className=\"col-6\">\n                8:34 PM\n        </div>\n    </div>\n</div>\n        )\n    }\n}\n\n\n//navbar style\nconst containerStyle = {\n    paddingLeft: '0'\n  }\n  \n  const headerStyle =  {\n      color: 'ghostwhite',\n      padding: '1em 10px 1em 10px',\n      textAlign: 'center',\n      background: 'linear-gradient(45deg, #7f5fff, #7f5fff, #5f8fff, #5f8fff)',\n      background: '#7f5fff',\n      boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px',\n  };\n  \n  const ulStyle = {\n      float: 'left',\n      color: 'ghostwhite !important'\n  }\n  \n  const menuIcon = {\n      fontSize: '30px',\n      color: 'ghostwhite',\n  }\n  \n  const brandStyle = {\n      color: 'ghostwhite',\n      background: '#4c4c4c',\n      background: 'transparent',\n      borderRadius: '20em',\n      padding: '10px',\n      fontFamily: 'Trispace',\n      boxShadow: 'rgba(0, 0, 0, 0.35) 0px 5px 15px',\n  }\n  \n  const aStyle = {\n    textAlign: \"left\",\n    color: 'black',\n    fontFamily: 'Trispace',\n  }\n  \n  const ulIcon = {\n    color: 'black',\n  }\n\n  //alert style\nconst headerRow = {\n    padding: \"20px\",\n    background: \"white\",\n    boxShadow: \"rgba(0, 0, 0, 0.04) 0px 3px 5px\",\n}\nconst iStyle = {\n    fontSize: \"20px\"\n}\nconst iStyle1 = {\n    fontSize: \"20px\",\n    marginLeft: \"30px\"\n}\nconst liFloatRight = {\n    textAlign: \"right\",\n    fontFamily: 'Trispace',\n    fontSize: '20px',\n}\n\nexport default ProtectedNav","/Users/drejackson/Desktop/react-todo/src/components/layout/loader.js",[],"/Users/drejackson/Desktop/react-todo/src/components/layout/slickslider.js",[],"/Users/drejackson/Desktop/react-todo/src/components/layout/mainPage.js",["131"],"import React, {Component} from 'react'\nimport {Link} from 'react-router-dom'\n\nclass Main extends Component {\n    _isMounted = false;\n    displayProp = ['napkins', 'cups', 'soda'];\n    count = 0;\n    length = this.displayProp.length;\n    display = this.displayProp[this.count];\n\n\n    componentDidMount = () => {\n        this._isMounted = true;\n        if(this._isMounted){\n            \n        }\n    }\n\n    componentWillUnmount = () => {\n        this._isMounted = false;\n    }\n\n    render(){\n        return (\n            <div style={mainDiv}>\n                <div className=\"container-fluid h-100 p-0\">\n                <div style={heroRow} className=\"row\">\n                    <div className=\"col-12 text-center\">\n                        <h5 style={{color:\"#7f5fff\", padding:\"1.5em\"}}>Planning in groups has never been easier.</h5>\n                    </div>\n                </div>\n                <div style={{margin:\"1em\"}} className=\"row pt-3 pb-3\">\n                    <div className=\"col-lg-4 col-md-4 col-sm-12\">\n                    <div className=\"card h-100\">\n                        <div className=\"card-body\">\n                            <h5 className=\"card-title text-center\"><i class=\"far fa-glass-cheers\"></i> Plan Events</h5>\n                            <p className=\"card-text text-center\">Organize group events with ease.</p>\n                        </div>\n                    </div>\n                    </div>\n                    <div className=\"col-lg-4 col-md-4 col-sm-12\">\n                    <div className=\"card h-100\">\n                        <div className=\"card-body\">\n                            <h5 className=\"card-title text-center\"><i class=\"far fa-lightbulb-on\"></i> Group Projects</h5>\n                            <p className=\"card-text text-center\">Delegate task in group projects and keep track of who's doing what.</p>\n                        </div>\n                    </div>                     \n                     </div>\n                     <div className=\"col-lg-4 col-md-4 col-sm-12\">\n                     <div className=\"card h-100\">\n                        <div className=\"card-body\">\n                            <h5 className=\"card-title text-center\"><i class=\"fal fa-running\"></i> Personal Goals</h5>\n                            <p className=\"card-text text-center\">Set some goals and stay on target with our easy planner.</p>\n                        </div>\n                    </div>                     \n                     </div>\n                </div>\n                <div style={{background:\"white\"}} className=\"row p-3\">\n                    <div className=\"col-12 text-center\">\n                        <h1 style={{color:\"rgb(127, 95, 255)\"}}>Plan, delegate task and coordinate many different types of events, projects and personal goals with our easy planner.</h1>\n                    </div>\n                </div>\n                <div style={{background:\"black\"}} className=\"row fixed-bottom\">\n                    <div className=\"col-12\">\n                    <nav style={{background:\"black\"}} class=\"navbar\">\n                        <form class=\"container-fluid justify-content-center\">\n                            <button class=\"btn btn-outline-primary me-2\" type=\"button\"><i class=\"fab fa-twitter\"></i> Twitter</button>\n                            <button class=\"btn btn-outline-primary me-2\" type=\"button\"><i class=\"fab fa-instagram\"></i> Instagram</button>\n                            <button class=\"btn btn-outline-primary\" type=\"button\"><i class=\"fas fa-dollar-sign\"></i> Donate</button>\n                        </form>\n                    </nav>\n                    </div>\n                </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mainDiv = {\n   \n}\nconst heroRow = {\n    background: \"white\",\n}\n\n\n\nexport default Main","/Users/drejackson/Desktop/react-todo/src/firebase/fbconfig.js",[],{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":2,"column":8,"nodeType":"138","messageId":"139","endLine":2,"endColumn":12},{"ruleId":"136","severity":1,"message":"140","line":4,"column":8,"nodeType":"138","messageId":"139","endLine":4,"endColumn":13},{"ruleId":"136","severity":1,"message":"141","line":8,"column":8,"nodeType":"138","messageId":"139","endLine":8,"endColumn":12},{"ruleId":"136","severity":1,"message":"142","line":9,"column":8,"nodeType":"138","messageId":"139","endLine":9,"endColumn":13},{"ruleId":"143","severity":1,"message":"144","line":28,"column":13,"nodeType":"145","endLine":28,"endColumn":125},{"ruleId":"136","severity":1,"message":"146","line":57,"column":7,"nodeType":"138","messageId":"139","endLine":57,"endColumn":14},{"ruleId":"136","severity":1,"message":"147","line":62,"column":7,"nodeType":"138","messageId":"139","endLine":62,"endColumn":15},{"ruleId":"148","severity":1,"message":"149","line":70,"column":5,"nodeType":"150","messageId":"151","endLine":70,"endColumn":15},{"ruleId":"136","severity":1,"message":"152","line":73,"column":7,"nodeType":"138","messageId":"139","endLine":73,"endColumn":13},{"ruleId":"136","severity":1,"message":"153","line":79,"column":7,"nodeType":"138","messageId":"139","endLine":79,"endColumn":13},{"ruleId":"154","severity":1,"message":"155","line":24,"column":77,"nodeType":"145","endLine":24,"endColumn":104},{"ruleId":"136","severity":1,"message":"156","line":4,"column":8,"nodeType":"138","messageId":"139","endLine":4,"endColumn":12},{"ruleId":"132","replacedBy":"157"},{"ruleId":"134","replacedBy":"158"},{"ruleId":"136","severity":1,"message":"159","line":1,"column":28,"nodeType":"138","messageId":"139","endLine":1,"endColumn":36},{"ruleId":"136","severity":1,"message":"160","line":4,"column":8,"nodeType":"138","messageId":"139","endLine":4,"endColumn":14},{"ruleId":"136","severity":1,"message":"161","line":134,"column":13,"nodeType":"138","messageId":"139","endLine":134,"endColumn":17},{"ruleId":"136","severity":1,"message":"162","line":161,"column":13,"nodeType":"138","messageId":"139","endLine":161,"endColumn":16},{"ruleId":"163","severity":1,"message":"164","line":320,"column":72,"nodeType":"165","messageId":"166","endLine":320,"endColumn":74},{"ruleId":"136","severity":1,"message":"167","line":423,"column":7,"nodeType":"138","messageId":"139","endLine":423,"endColumn":20},{"ruleId":"136","severity":1,"message":"168","line":434,"column":7,"nodeType":"138","messageId":"139","endLine":434,"endColumn":14},{"ruleId":"136","severity":1,"message":"169","line":2,"column":10,"nodeType":"138","messageId":"139","endLine":2,"endColumn":30},{"ruleId":"154","severity":1,"message":"155","line":23,"column":37,"nodeType":"145","endLine":23,"endColumn":98},{"ruleId":"148","severity":1,"message":"149","line":62,"column":7,"nodeType":"150","messageId":"151","endLine":62,"endColumn":17},{"ruleId":"148","severity":1,"message":"149","line":79,"column":7,"nodeType":"150","messageId":"151","endLine":79,"endColumn":17},{"ruleId":"136","severity":1,"message":"170","line":2,"column":9,"nodeType":"138","messageId":"139","endLine":2,"endColumn":13},"no-native-reassign",["171"],"no-negated-in-lhs",["172"],"no-unused-vars","'Task' is defined but never used.","Identifier","unusedVar","'Input' is defined but never used.","'Time' is defined but never used.","'Alert' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ulStyle' is assigned a value but never used.","'menuIcon' is assigned a value but never used.","no-dupe-keys","Duplicate key 'background'.","ObjectExpression","unexpected","'aStyle' is assigned a value but never used.","'ulIcon' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Todo' is defined but never used.",["171"],["172"],"'useState' is defined but never used.","'Loader' is defined but never used.","'icon' is assigned a value but never used.","'obj' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'displayBlock1' is assigned a value but never used.","'circle1' is assigned a value but never used.","'CreateBrowserHistory' is defined but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]